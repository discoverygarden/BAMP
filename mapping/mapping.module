<?php

// $Id: mapping.module $

/**
 * @file
 * Creates the forms required for the mapping module.
 */

$scriptPath = drupal_get_path('module', 'mapping') . '/dragmap/';

// note that there are jQuery errors caused by these includes
// but they are not currently interfering with anything, so i
// will ignore then for now
/// @bug Fix these jQuery errors
drupal_add_js('http://maps.google.com/maps?file=api&v=2&key=ABQIAAAA0PE28W4l_-kPv3vRgHrHshS5uO78p9KlamihMnakABrfsZSw6xQaElE4pySRddCPyOFk1zfSuDurCQ');
drupal_add_js($scriptPath . 'MStatusControl.js');
drupal_add_js($scriptPath . 'MPolyDragControl.js');
drupal_add_js($scriptPath . 'gm_drag_polygon.js');

/**
 * Build the links in the navigation menu for each of the forms
 */
function mapping_menu() {

//  Main form
  $items['mapping'] = array(
    'title' => 'Map',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mapping_form'),
    'access callback' => 'user_access',
    'access arguments' => array('mapping module'),
  );

  return $items;
}

function mapping_form($form, &$form_state){
  drupal_set_title(t('Mapping Menu'));

  $form['accept'] = array(
    '#type' => 'submit',
    '#value' => t('View Report'),
    '#submit' => array('mapping_form_submit'),
  );
  $form['cancel'] = array(
    '#type' => 'button',
    '#value' => t('Clear Selection'),
    '#attributes' => array('onClick' => ''),
    '#executes_submit_callback' => FALSE,
  );
  $form['map'] = array(
    '#type' => 'markup',
    '#markup' => '',
    '#prefix' => '<div id="mapDiv" style="height:600px">',
    '#suffix' => '</div>',
  );
  $form['addr'] = array(
    '#type' => 'textfield',
    '#title' => 'title',
    '#id' => 'coords',
    '#default_value' => '',
  );

  return $form;
}

function mapping_form_submit($form, &$form_state){
  // extract each individual parameter/value pair
  $url = explode('&', $form['addr']['#value']);
  unset($form_state['storage']);

  $params = array();
  // now pull the parameter name and value apart (always exactly 4 params)
  for ($i=0; $i<4; $i++){
    $k = explode('=', $url[$i]);
    $params[$k[0]] = $k[1];
  }
  $form_state['redirect'] = array('map_report', array('query' => $params));
}

/*
function mapping_help($path, $arg) {
  // these cases are the array indices used in the _menu hook above
  switch($path){
    // this case makes the help show up in the "modules" menu
    case "admin/help#mapping":
      return '<ul><li>Path(#)=' . $path . '</li><li>Args=' . $arg . '</li></ul>';
    break;
    // this is exactly the same as above ("/"="#" in this case)
//    case "admin/help/mapping":
//      return '<ul><li>Path(/)=' . $path . '</li><li>Args=' . $arg . '</li></ul>';
//    break;
    // in the hook_menu function we defined a node identified by "mapping"
    // this makes the help show up on the "mapping" page
    case "mapping":
      return '<ul><li>Path(mapping)=' . $path . '</li><li>Args=' . $arg . '</li></ul>';
    break;
    // in the hook_menu function we also defined "mapping/Input" (capital I)
    // this makes the help show up on that page as well
    case "mapping/Input":
      return '<ul><li>Path(input)=' . $path . '</li><li>Args=' . $arg . '</li></ul>';
    break;
  }
}
*/

function mapping_permission() {
  return array(
    'mapping module' => array(
      'title' => t('Mapping module access'),
      'description' => t('Access to the Mapping module'),
    ),
    'input form' => array(
      'title' => t('Input form access'),
      'description' => t('Access the mapping input forms'),
    ),
  );
}
